ChangeLog v2.0

Clase empresa:
- Metodo agregarMaterial: Se agrego checkeo de precondicion con asserto para detectar permisos de usuario (test: EMP02I).
- Metodo consultaFaltantes: Se modifico operaciones aritmeticas para que redondeen valores a 3 decimales (test: EMP05E). En vista del problema se extiende 
esta correccion a los metodos de la clase Material que implican una operación matematica: 
------> Material: registrarRetiro y registrarIngreso.
------> Pedido: materialesNecesarios
- Metodo consultaFaltantes: Se agrego control de precondicion para que verifique que el usuario tiene autorizacion para realizar la operacion (test EMP05H).
- Metodo iniciarPedido: Se modifico chequeo de precondicion de atributo cantidad que solo verificaba que fuese mayor a cero, se agrega control de que tambien sea
menor o igual que 999 (test EMP10D).
- Metodo eliminarMaterialReceta: se agrego aserto que verifica autorizacion de usuario para realizar operacion (test EMP08E).
- Metodo materialesNecesarios: se agrego aserto que verifica autorizacion de usuario para realizar operacion (test EMP13D).
- Metodo modificarCantidadReceta: se agrego aserto que verifica autorizacion de usuario para realizar operacion (test EMP14G).
- Metodo observarPedido: Se modifico condicion dentro del if que lanzaba la excepcion. Hacia justo lo opuesto ya que entraba si el pedido estaba en estado
de evaluacion que era justamente el valor correcto para el metodo (test EMP15A, EMP15B y EMP15C).
- Metodo observarPedido: Se agrego asserto que comprueba que la cadena de observacion no sea vacia (test EMP15G).
- Metodo cancelarPedido: Se modifico la logica del metodo. Inicialmente se basaba pasar el Pedido a estado de evaluacion para poder insertar la observacion
de cancelacion. Se delega la insercion de la observacion al metodo estado cancelado de la clase Pedido (test PED05A y PED05B).


Clase material:
- Metodo registrarRetiro: en base al error detectado en el test EMP05E, se decide corregir preventivamente la operacion aritmetica de resta para que redondee tanto
los valores que intervienen como el resultado de las operaciones a 3 decimales. (test EMP05E)
- Metodo registrarIngreso: en base al error detectado en el test EMP05E, se decide corregir preventivamente la operacion aritmetica de suma para que redondee tanto
los valores que intervienen como el resultado de las operaciones a 3 decimales. (test EMP05E)


Clase Pedido:
- Metodo materialesNecesarios: en base al error detectado en el test EMP05E, se decide corregir preventivamente la operacion aritmetica de resta para que redondee
el valor de cantidad de cada material de la receta y el resultado del producto en 3 decimales para evitar errores de redondeo.
- Metodo verificarInvariante: Se modifico chequeo de cantidad que daba como no valida a una cantidad de 999 (se modifica por menor/igual) (testEMP10D).
- Metodo constructor: Se modifico chequeo de precondicion (cantidad < 999), se modifica por <= (testEMP10D).
- Metodo estadoCancelado: Se modifica para que inserte la observacion de cancelacion (Pasa ahora a recibir un parametro). El metodo se encarga ahora
de insertar directamente la observacion al listado, se agrega la precondicion de que la observacion no sea nula y el control con asserto. Esta modificacion implica 
un rediseño de los casos de prueba para el test de esta clase se crea planilla para el metodo (rev1) (test PED05A y PED05B).
- Ante la aleatoriedad mostrada en los resultados de los metodos que controlaban fechas, se crean dos metodos:
resetHoraFecha(): Iguala a cero la componente del objeto calendar correspondiente a hora, minutos, segundos y milisegundos
fechaActual(): devuelve una fecha actual con la componente de hora, minutos, segundos y milisegundos igualada a cero.

Clase observacion:
- Metodo toString: se corrigio el error en simpleDateFormat que provocaba el error. Se corrigio en la clase test el generador del string que no tenia en cuenta
el salto de linea que se agrega en el metodo que enlistaba y el criterio de ordenamiento (tema - fecha) que no se estaba teniendo en cuenta.
Para mejorar el formato se cambio (tanto en el metodo toString como en el test) la tabulación por un espaciado para mejorar la cadena. (test EMP11C y EMP11D).
- Metodo verificarInvariante: se agrego verificacion de que el nLegCreador sea un valor mayor que cero (test OBS01B y OBS01C).
- Metodo constructor: se agrego chequeo de precondicion con asserto que verifique que el parametro nLegCreador sea un valor mayor que cero (test OBS01B y OBS01C).

Clase Maquina:
- Metodo verificarInvariante: Se corrigio el chequeo de rango de codigo de maquina que daba al codigo 1 como invalido (test MAQ02B).
- Metodo verificarInvariante: Se agrego la verificacion del tamaño maximo de la cadena descripcion para limitarla a 100 caracteres (test MAQ02K y MAQ02L).
- Metodo constructor: Se agrego la verificacion del tamaño maximo de la cadena descripcion para limitarla a 100 caracteres (test MAQ02K y MAQ02L).

Clase Material:
- Metodo constructor: Se agrego control de precondicion con asserto para descripcion menor o igual a 100 caracteres (test MAT01J y MAT01K).

EmpresaException:
- Metodo constructor: Se agrego un control de precondicion para verificar que la descripcion no sea nula ni vacia. Como por las caracteristicas del metodo 
(llamado al constructor de la superclase) no se podian poner al principio del metodo se colocan al final como si fuese una postCondicion (test EME01B y EME01C).

Fixture Pedido:
- Se adaptan metodos de setUp para la familia de test: PED05.

PedidoTest:
- Se adaptan los metodos existentes al metodo y se crean los faltantes.
- Se adaptan los metodos de test que variaban con el formato de la hora y algunas leyendas mal colocadas.

EmpresaTest:
- El cambio en la "regla de negocio" para cancelar un pedido hace necesario modificar los test EMP03A, EMP03B, EMP03K para que no comparen la fechaPropProduccion,
Se revisa la planilla de caja negra correspondiente al metodo.